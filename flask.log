nohup: ignoring input
 * Serving Flask app 'index.py' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:4500
 * Running on http://138.246.225.198:4500
[33mPress CTRL+C to quit[0m
192.168.80.4 - - [31/Jul/2024 16:49:27] "OPTIONS /register HTTP/1.0" 200 -
192.168.80.4 - - [31/Jul/2024 16:49:29] "POST /register HTTP/1.0" 200 -
SELECT * FROM user_registered WHERE token = %s and ((isVerified = 0 AND isCompleted = 0) OR (isVerified = 1 AND isCompleted = 0))
((76, 'testing', 'six', 'testingsix@tum.de', 'aba74def-f3f5-4633-a748-c54f58e87f81', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, datetime.datetime(2024, 7, 31, 15, 49, 27), None),)
UPDATE user_registered SET isVerified = 1 WHERE token = %s;
Step1 before  {KEYCLOAK_SERVER_URL}/realms/{KEYCLOAK_REALM}/protocol/openid-connect/token
token_request {'access_token': 'eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICI2ZXFTUjM3MWtEMV9vR09oQlR6c0ZNQXBzdklQX2FoRjl4YmM1YnV5X3RnIn0.eyJleHAiOjE3MjI0Mzc0NDQsImlhdCI6MTcyMjQzNzM4NCwianRpIjoiODNmN2M0ZWEtZTRkNi00NjU5LTk5ZGEtNDQwNGYxYmYyMTAyIiwiaXNzIjoiaHR0cHM6Ly9rZXljbG9hay1kZXYuaGVmLnR1bS5kZS9yZWFsbXMvbWFzdGVyIiwiYXVkIjpbIm1hc3Rlci1yZWFsbSIsImFjY291bnQiXSwic3ViIjoiZGQ3NmU0NjItMTMyYi00ZGZhLTg0NjAtY2IxOGZlN2MyN2QwIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoiaGVmU2Vuc29ySHViX2RldmVsb3BtZW50Iiwic2Vzc2lvbl9zdGF0ZSI6ImU2Yjg1N2IyLWQ3ZjUtNDIzOS04YjA4LTkzMzNhMzVjNDU5YyIsImFjciI6IjEiLCJhbGxvd2VkLW9yaWdpbnMiOlsiKiJdLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsiY3JlYXRlLXJlYWxtIiwiZGVmYXVsdC1yb2xlcy1tYXN0ZXIiLCJvZmZsaW5lX2FjY2VzcyIsImFkbWluIiwidW1hX2F1dGhvcml6YXRpb24iXX0sInJlc291cmNlX2FjY2VzcyI6eyJtYXN0ZXItcmVhbG0iOnsicm9sZXMiOlsidmlldy1pZGVudGl0eS1wcm92aWRlcnMiLCJ2aWV3LXJlYWxtIiwibWFuYWdlLWlkZW50aXR5LXByb3ZpZGVycyIsImltcGVyc29uYXRpb24iLCJjcmVhdGUtY2xpZW50IiwibWFuYWdlLXVzZXJzIiwicXVlcnktcmVhbG1zIiwidmlldy1hdXRob3JpemF0aW9uIiwicXVlcnktY2xpZW50cyIsInF1ZXJ5LXVzZXJzIiwibWFuYWdlLWV2ZW50cyIsIm1hbmFnZS1yZWFsbSIsInZpZXctZXZlbnRzIiwidmlldy11c2VycyIsInZpZXctY2xpZW50cyIsIm1hbmFnZS1hdXRob3JpemF0aW9uIiwibWFuYWdlLWNsaWVudHMiLCJxdWVyeS1ncm91cHMiXX0sImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoiZW1haWwgcHJvZmlsZSIsInNpZCI6ImU2Yjg1N2IyLWQ3ZjUtNDIzOS04YjA4LTkzMzNhMzVjNDU5YyIsImVtYWlsX3ZlcmlmaWVkIjpmYWxzZSwicHJlZmVycmVkX3VzZXJuYW1lIjoiYWRtaW4ifQ.RKz3mausULbvERHlbY3TSIwmft5K6pyyDmuv7hPtKaeqTuIcgW5-nZ3XIgem_uwbc8EBWDslUlI6cNx7BFkRIm2YYInccedgKUqWzQoilfqsghK062WExBre3VG_Enp6p3CgMQYfAp4mUbeHugJbGGK9m3bf_qqkYfW65vH1e6BkW_qBvDSQmngoTglrVE3yQzQq_Kvyc_tnvWfFCJ7quiL_G7ERlHYTiotKc-rO9AZGchSNHrKLalm77i9Kcow7WR6tQfZ3RSgTuchGvHbWZcshkI-NHwAg4SEL_Pvq4oj8sehdU_MGawpN9kQtg4Fo_zaDpxBrHAUier97hiz2pA', 'expires_in': 60, 'refresh_expires_in': 1800, 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICIzNGU5ZDYzYi04MzEzLTRjNDUtOWQ2MS1hMDAzMDY0MzM2OWMifQ.eyJleHAiOjE3MjI0MzkxODQsImlhdCI6MTcyMjQzNzM4NCwianRpIjoiNTA2NmQyZTQtNGQ2MC00NTJmLTkxNjItNTE2ODcyZmMxZjU4IiwiaXNzIjoiaHR0cHM6Ly9rZXljbG9hay1kZXYuaGVmLnR1bS5kZS9yZWFsbXMvbWFzdGVyIiwiYXVkIjoiaHR0cHM6Ly9rZXljbG9hay1kZXYuaGVmLnR1bS5kZS9yZWFsbXMvbWFzdGVyIiwic3ViIjoiZGQ3NmU0NjItMTMyYi00ZGZhLTg0NjAtY2IxOGZlN2MyN2QwIiwidHlwIjoiUmVmcmVzaCIsImF6cCI6ImhlZlNlbnNvckh1Yl9kZXZlbG9wbWVudCIsInNlc3Npb25fc3RhdGUiOiJlNmI4NTdiMi1kN2Y1LTQyMzktOGIwOC05MzMzYTM1YzQ1OWMiLCJzY29wZSI6ImVtYWlsIHByb2ZpbGUiLCJzaWQiOiJlNmI4NTdiMi1kN2Y1LTQyMzktOGIwOC05MzMzYTM1YzQ1OWMifQ.Kb4f7ig2xtI1XkvnVwYANUrBaI2Q6GNQnbfoze0Tc74', 'token_type': 'Bearer', 'not-before-policy': 0, 'session_state': 'e6b857b2-d7f5-4239-8b08-9333a35c459c', 'scope': 'email profile'}
step2
UPDATE user_registered SET keycloak_user_creation = 1 WHERE token = %s;
step3
SELECT id FROM user_registered where email = %s;
User ID: 76
Data inserted successfully into service table for user ID: 76
70
TEST1
True
TEST2
TEST3
TEST5
TEST6
TEST7
TEST10
6070
1960
UPDATE user_registered SET keycloak_generate_client = 1 WHERE token = %s;
UPDATE user_registered SET keycloak_create_roles_for_client = 1 WHERE token = %s;
UPDATE user_registered SET keycloak_role_mapping = 1 WHERE token = %s;
*****GROUP NAME ******
d385fa2b021e48abbcdb8818949fdb54
*****GROUP NAME ******
UPDATE user_registered SET group_creation = 1 WHERE token = %s;
************
000ded00-89e1-4c44-a332-4b70acf5f333
************
User added to group successfully.
UPDATE user_registered SET group_assign_user_to_group = 1 WHERE token = %s;
UPDATE user_registered SET group_frost_client_role_mapping = 1 WHERE token = %s;
Error response from daemon: No such container: e921945659fe
Error testing Nginx configuration: Command '['docker', 'exec', 'e921945659fe', 'nginx', '-t']' returned non-zero exit status 1.
UPDATE user_registered SET yml_genereration = 1 WHERE token = %s;

    version: '3'
    services:
      web:
        image: fraunhoferiosb/frost-server:2.0
        container_name: frost_6070
        environment:
          - serviceRootUrl=https://6070-frost-dev.hef.tum.de/FROST-Server
          - http_cors_enable=true
          - http_cors_allowed.origins=*
          - persistence_db_driver=org.postgresql.Driver
          - persistence_db_url=jdbc:postgresql://database:5432/sensorthings
          - persistence_db_username=sensorthings
          - persistence_db_password=ChangeMe
          - persistence_autoUpdateDatabase=true
          - persistence_alwaysOrderbyId=true
          - auth.provider=de.fraunhofer.iosb.ilt.frostserver.auth.keycloak.KeycloakAuthProvider
          - auth.keycloakConfigUrl=https://keycloak-dev.hef.tum.de/realms/master/clients-registrations/install/frost_6070
          - auth.keycloakConfigSecret=xD8nzfyF1T1ktsULQ6BuuuzCymurDL1P
        ports:
          - 6070:8080
          - 1960:1883
        depends_on:
          - database
        restart: always
      database:
        image: postgis/postgis:11-2.5-alpine
        container_name: frost_6070_db
        environment:
          - POSTGRES_DB=sensorthings
          - POSTGRES_USER=sensorthings
          - POSTGRES_PASSWORD=ChangeMe
        volumes:
          - postgis_volume:/var/lib/postgresql/data
        restart: always
    volumes:
        postgis_volume:
    
frost_6070
Creating network "frost_6070_default" with the default driver
Creating volume "frost_6070_postgis_volume" with default driver
Creating frost_6070_db ... 
[1A[2KCreating frost_6070_db ... [32mdone[0m[1BCreating frost_6070    ... 
[1A[2KCreating frost_6070    ... [32mdone[0m[1BCompletedProcess(args=['docker-compose', '-p', 'frost_6070', '-f', 'yml_files/frost_6070.yml', 'up', '-d'], returncode=0)
UPDATE user_registered SET frost_yml_execution = 1 WHERE token = %s;
CompletedProcess(args='docker run -d --restart always --init  -p 20044:1880 -v node_red_storage_70:/data --name node_red_70 nodered/node-red', returncode=0, stdout=b'eab92c32b2b79f511b9ac1ec666b3a996b4007421332b94af005ae2d47958aca\n', stderr=b'')
UPDATE user_registered SET node_red_command_execution = 1 WHERE token = %s;
node_red_70WASS 
eab92c32b2b7 WASSS 
eab92c32b2b7

added 5 packages, and audited 309 packages in 2s

47 packages are looking for funding
  run `npm fund` for details

4 high severity vulnerabilities

To address issues that do not require attention, run:
  npm audit fix

To address all issues, run:
  npm audit fix --force

Run `npm audit` for details.
npm notice 
npm notice New major version of npm available! 8.19.4 -> 10.8.2
npm notice Changelog: <https://github.com/npm/cli/releases/tag/v10.8.2>
npm notice Run `npm install -g npm@10.8.2` to update!
npm notice 
CompletedProcess(args=['docker', 'exec', 'eab92c32b2b7', 'bash', '-c', 'cd /usr/src/node-red/node_modules && npm install passport-keycloak-oauth2-oidc'], returncode=0)
CompletedProcess(args=['docker', 'exec', 'eab92c32b2b7', 'bash', '-c', 'cd /usr/src/node-red/node_modules && npm install passport-keycloak-oauth2-oidc'], returncode=0)
UPDATE user_registered SET node_red_install_libaries = 1 WHERE token = %s;
http://tuzehez-dev.srv.mwn.de 20044 DOMAIN PRINT
UPDATE user_registered SET node_red_keycloak_generate_new_client = 1 WHERE token = %s;
UPDATE user_registered SET node_red_keycloak_generate_roles = 1 WHERE token = %s;
UPDATE user_registered SET node_red_keycloak_role_mapping = 1 WHERE token = %s;
UPDATE user_registered SET group_node_red_client_role_mapping = 1 WHERE token = %s;
PcmaZ4kQtOrg8uYYzUkUdRLz5SNt6GgC SECRET OF NODE RED
958f11c6-e922-4273-8692-dad27f68da1c ID OF RED NODE CLIENT
node_red_70 TEST 
node_red_70 PcmaZ4kQtOrg8uYYzUkUdRLz5SNt6GgC http://tuzehez-dev.srv.mwn.de:20044/auth/strategy/callback https://keycloak-dev.hef.tum.de master testingsix@tum.de http://tuzehez-dev.srv.mwn.de
UPDATE user_registered SET node_red_replace_settings = 1 WHERE token = %s;
eab92c32b2b7
CompletedProcess(args='docker restart eab92c32b2b7', returncode=0)
UPDATE user_registered SET node_red_restart_container = 1 WHERE token = %s;
UPDATE user_registered SET isCompleted = 1, completedAt = %s WHERE token = %s;
192.168.80.4 - - [31/Jul/2024 16:49:51] "GET /validate?token=aba74def-f3f5-4633-a748-c54f58e87f81 HTTP/1.0" 200 -
SELECT * FROM user_registered WHERE token = %s and ((isVerified = 0 AND isCompleted = 0) OR (isVerified = 1 AND isCompleted = 0))
()
192.168.80.4 - - [31/Jul/2024 16:55:27] "GET /validate?token=aba74def-f3f5-4633-a748-c54f58e87f81 HTTP/1.0" 200 -
192.168.80.4 - - [31/Jul/2024 16:56:01] "GET /node-red?email=testingsix@tum.de HTTP/1.0" 200 -
192.168.80.4 - - [31/Jul/2024 16:56:01] "GET /node-red?email=testingsix@tum.de HTTP/1.0" 200 -
192.168.80.4 - - [31/Jul/2024 16:56:01] "GET /get_clients?user_id=5d7c0175-c4f7-42b6-bf20-d5b3f8747c90 HTTP/1.0" 200 -
192.168.80.4 - - [31/Jul/2024 16:56:02] "GET /get_clients?user_id=5d7c0175-c4f7-42b6-bf20-d5b3f8747c90 HTTP/1.0" 200 -
192.168.80.4 - - [31/Jul/2024 16:56:03] "GET /node-red?email=testingsix@tum.de HTTP/1.0" 200 -
192.168.80.4 - - [31/Jul/2024 16:56:03] "GET /frost-server?email=testingsix@tum.de HTTP/1.0" 200 -
192.168.80.4 - - [31/Jul/2024 16:56:03] "GET /node-red?email=testingsix@tum.de HTTP/1.0" 200 -
192.168.80.4 - - [31/Jul/2024 16:56:03] "GET /node-red?email=testingsix@tum.de HTTP/1.0" 200 -
192.168.80.4 - - [31/Jul/2024 16:56:03] "GET /node-red?email=testingsix@tum.de HTTP/1.0" 200 -
192.168.80.4 - - [31/Jul/2024 16:56:03] "GET /get_clients?user_id=5d7c0175-c4f7-42b6-bf20-d5b3f8747c90 HTTP/1.0" 200 -
192.168.80.4 - - [31/Jul/2024 16:56:05] "GET /node-red?email=testingsix@tum.de HTTP/1.0" 200 -
192.168.80.4 - - [31/Jul/2024 16:56:05] "GET /frost-server?email=testingsix@tum.de HTTP/1.0" 200 -
192.168.80.4 - - [31/Jul/2024 16:56:05] "GET /node-red?email=testingsix@tum.de HTTP/1.0" 200 -
192.168.80.4 - - [31/Jul/2024 16:56:05] "GET /node-red?email=testingsix@tum.de HTTP/1.0" 200 -
192.168.80.4 - - [31/Jul/2024 16:56:05] "GET /node-red?email=testingsix@tum.de HTTP/1.0" 200 -
192.168.80.4 - - [31/Jul/2024 16:56:05] "GET /get_clients?user_id=5d7c0175-c4f7-42b6-bf20-d5b3f8747c90 HTTP/1.0" 200 -
192.168.80.4 - - [31/Jul/2024 16:56:59] "GET /node-red?email=testingsix@tum.de HTTP/1.0" 200 -
192.168.80.4 - - [31/Jul/2024 16:56:59] "GET /frost-server?email=testingsix@tum.de HTTP/1.0" 200 -
192.168.80.4 - - [31/Jul/2024 16:56:59] "GET /node-red?email=testingsix@tum.de HTTP/1.0" 200 -
192.168.80.4 - - [31/Jul/2024 16:56:59] "GET /node-red?email=testingsix@tum.de HTTP/1.0" 200 -
192.168.80.4 - - [31/Jul/2024 16:56:59] "GET /node-red?email=testingsix@tum.de HTTP/1.0" 200 -
192.168.80.4 - - [31/Jul/2024 16:56:59] "GET /get_clients?user_id=5d7c0175-c4f7-42b6-bf20-d5b3f8747c90 HTTP/1.0" 200 -
192.168.80.4 - - [31/Jul/2024 16:56:59] "GET /get_clients?user_id=5d7c0175-c4f7-42b6-bf20-d5b3f8747c90 HTTP/1.0" 200 -
192.168.80.4 - - [31/Jul/2024 16:57:06] "GET /node-red?email=testingsix@tum.de HTTP/1.0" 200 -
192.168.80.4 - - [31/Jul/2024 16:57:06] "GET /frost-server?email=testingsix@tum.de HTTP/1.0" 200 -
192.168.80.4 - - [31/Jul/2024 16:57:06] "GET /node-red?email=testingsix@tum.de HTTP/1.0" 200 -
192.168.80.4 - - [31/Jul/2024 16:57:06] "GET /node-red?email=testingsix@tum.de HTTP/1.0" 200 -
192.168.80.4 - - [31/Jul/2024 16:57:06] "GET /node-red?email=testingsix@tum.de HTTP/1.0" 200 -
192.168.80.4 - - [31/Jul/2024 16:57:06] "GET /get_clients?user_id=5d7c0175-c4f7-42b6-bf20-d5b3f8747c90 HTTP/1.0" 200 -
192.168.80.4 - - [31/Jul/2024 16:57:59] "GET /node-red?email=testingsix@tum.de HTTP/1.0" 200 -
192.168.80.4 - - [31/Jul/2024 16:57:59] "GET /frost-server?email=testingsix@tum.de HTTP/1.0" 200 -
192.168.80.4 - - [31/Jul/2024 16:57:59] "GET /node-red?email=testingsix@tum.de HTTP/1.0" 200 -
192.168.80.4 - - [31/Jul/2024 16:57:59] "GET /node-red?email=testingsix@tum.de HTTP/1.0" 200 -
192.168.80.4 - - [31/Jul/2024 16:57:59] "GET /node-red?email=testingsix@tum.de HTTP/1.0" 200 -
192.168.80.4 - - [31/Jul/2024 16:58:00] "GET /get_clients?user_id=5d7c0175-c4f7-42b6-bf20-d5b3f8747c90 HTTP/1.0" 200 -
36.156.145.152 - - [31/Jul/2024 17:03:19] code 400, message Bad HTTP/0.9 request type ('\x03\x00\x00+&à\x00\x00\x00\x00\x00Cookie:')
36.156.145.152 - - [31/Jul/2024 17:03:19] "[35m[1m  +&à     Cookie: mstshash=hello[0m" HTTPStatus.BAD_REQUEST -
87.236.176.99 - - [31/Jul/2024 17:03:30] code 400, message Bad request syntax ("\x16\x03\x01\x01+\x01\x00\x01'\x03\x03\x98¨3X")
87.236.176.99 - - [31/Jul/2024 17:03:30] "[35m[1m+ '¨3X[0m" HTTPStatus.BAD_REQUEST -
87.236.176.85 - - [31/Jul/2024 17:03:45] "[33mGET / HTTP/1.1[0m" 404 -
